//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProductMenegmentClient.ProductService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Manufacturer ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Price PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Provider ProviderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Remnants RemnantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.ProductType productTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Manufacturer Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Price Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Provider Provider {
            get {
                return this.ProviderField;
            }
            set {
                if ((object.ReferenceEquals(this.ProviderField, value) != true)) {
                    this.ProviderField = value;
                    this.RaisePropertyChanged("Provider");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Remnants Remnants {
            get {
                return this.RemnantsField;
            }
            set {
                if ((object.ReferenceEquals(this.RemnantsField, value) != true)) {
                    this.RemnantsField = value;
                    this.RaisePropertyChanged("Remnants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.ProductType productType {
            get {
                return this.productTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.productTypeField, value) != true)) {
                    this.productTypeField = value;
                    this.RaisePropertyChanged("productType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Manufacturer", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Manufacturer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Price", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Price : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PurchasePriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SellingPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PurchasePrice {
            get {
                return this.PurchasePriceField;
            }
            set {
                if ((this.PurchasePriceField.Equals(value) != true)) {
                    this.PurchasePriceField = value;
                    this.RaisePropertyChanged("PurchasePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SellingPrice {
            get {
                return this.SellingPriceField;
            }
            set {
                if ((this.SellingPriceField.Equals(value) != true)) {
                    this.SellingPriceField = value;
                    this.RaisePropertyChanged("SellingPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Provider", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Provider : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Remnants", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Remnants : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductType", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class ProductType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Address AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Order[] OrdersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Address Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Order[] Orders {
            get {
                return this.OrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersField, value) != true)) {
                    this.OrdersField = value;
                    this.RaisePropertyChanged("Orders");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZIPField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZIP {
            get {
                return this.ZIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ZIPField, value) != true)) {
                    this.ZIPField = value;
                    this.RaisePropertyChanged("ZIP");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.ItemForSale[] OrdersProductField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.ItemForSale[] OrdersProduct {
            get {
                return this.OrdersProductField;
            }
            set {
                if ((object.ReferenceEquals(this.OrdersProductField, value) != true)) {
                    this.OrdersProductField = value;
                    this.RaisePropertyChanged("OrdersProduct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemForSale", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class ItemForSale : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductAmount {
            get {
                return this.ProductAmountField;
            }
            set {
                if ((this.ProductAmountField.Equals(value) != true)) {
                    this.ProductAmountField = value;
                    this.RaisePropertyChanged("ProductAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sales", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Sales : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Customer CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.ItemSaled[] SalesItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Customer Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerField, value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.ItemSaled[] SalesItems {
            get {
                return this.SalesItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesItemsField, value) != true)) {
                    this.SalesItemsField = value;
                    this.RaisePropertyChanged("SalesItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemSaled", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class ItemSaled : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductAmount {
            get {
                return this.ProductAmountField;
            }
            set {
                if ((this.ProductAmountField.Equals(value) != true)) {
                    this.ProductAmountField = value;
                    this.RaisePropertyChanged("ProductAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Acceptance", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class Acceptance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ProductMenegmentClient.ProductService.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ProductMenegmentClient.ProductService.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/ProductService")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductsService")]
    public interface IProductsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetData", ReplyAction="http://tempuri.org/IProductsService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetData", ReplyAction="http://tempuri.org/IProductsService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProducts", ReplyAction="http://tempuri.org/IProductsService/GetProductsResponse")]
        ProductMenegmentClient.ProductService.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProducts", ReplyAction="http://tempuri.org/IProductsService/GetProductsResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProfit", ReplyAction="http://tempuri.org/IProductsService/GetProfitResponse")]
        double GetProfit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProfit", ReplyAction="http://tempuri.org/IProductsService/GetProfitResponse")]
        System.Threading.Tasks.Task<double> GetProfitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/UpdateProducts", ReplyAction="http://tempuri.org/IProductsService/UpdateProductsResponse")]
        void UpdateProducts(ProductMenegmentClient.ProductService.Product p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/UpdateProducts", ReplyAction="http://tempuri.org/IProductsService/UpdateProductsResponse")]
        System.Threading.Tasks.Task UpdateProductsAsync(ProductMenegmentClient.ProductService.Product p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddProducts", ReplyAction="http://tempuri.org/IProductsService/AddProductsResponse")]
        void AddProducts(ProductMenegmentClient.ProductService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddProducts", ReplyAction="http://tempuri.org/IProductsService/AddProductsResponse")]
        System.Threading.Tasks.Task AddProductsAsync(ProductMenegmentClient.ProductService.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddCustomer", ReplyAction="http://tempuri.org/IProductsService/AddCustomerResponse")]
        void AddCustomer(ProductMenegmentClient.ProductService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddCustomer", ReplyAction="http://tempuri.org/IProductsService/AddCustomerResponse")]
        System.Threading.Tasks.Task AddCustomerAsync(ProductMenegmentClient.ProductService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/DeleteOrder", ReplyAction="http://tempuri.org/IProductsService/DeleteOrderResponse")]
        void DeleteOrder(ProductMenegmentClient.ProductService.Order ord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/DeleteOrder", ReplyAction="http://tempuri.org/IProductsService/DeleteOrderResponse")]
        System.Threading.Tasks.Task DeleteOrderAsync(ProductMenegmentClient.ProductService.Order ord);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetSales", ReplyAction="http://tempuri.org/IProductsService/GetSalesResponse")]
        ProductMenegmentClient.ProductService.Sales[] GetSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetSales", ReplyAction="http://tempuri.org/IProductsService/GetSalesResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Sales[]> GetSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/MakeSales", ReplyAction="http://tempuri.org/IProductsService/MakeSalesResponse")]
        void MakeSales(ProductMenegmentClient.ProductService.Order o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/MakeSales", ReplyAction="http://tempuri.org/IProductsService/MakeSalesResponse")]
        System.Threading.Tasks.Task MakeSalesAsync(ProductMenegmentClient.ProductService.Order o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetAddress", ReplyAction="http://tempuri.org/IProductsService/GetAddressResponse")]
        ProductMenegmentClient.ProductService.Address GetAddress(ProductMenegmentClient.ProductService.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetAddress", ReplyAction="http://tempuri.org/IProductsService/GetAddressResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Address> GetAddressAsync(ProductMenegmentClient.ProductService.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetCustomers", ReplyAction="http://tempuri.org/IProductsService/GetCustomersResponse")]
        ProductMenegmentClient.ProductService.Customer[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetCustomers", ReplyAction="http://tempuri.org/IProductsService/GetCustomersResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Customer[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProviders", ReplyAction="http://tempuri.org/IProductsService/GetProvidersResponse")]
        ProductMenegmentClient.ProductService.Provider[] GetProviders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetProviders", ReplyAction="http://tempuri.org/IProductsService/GetProvidersResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Provider[]> GetProvidersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddProvider", ReplyAction="http://tempuri.org/IProductsService/AddProviderResponse")]
        void AddProvider(ProductMenegmentClient.ProductService.Provider provider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddProvider", ReplyAction="http://tempuri.org/IProductsService/AddProviderResponse")]
        System.Threading.Tasks.Task AddProviderAsync(ProductMenegmentClient.ProductService.Provider provider);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetManufacturers", ReplyAction="http://tempuri.org/IProductsService/GetManufacturersResponse")]
        ProductMenegmentClient.ProductService.Manufacturer[] GetManufacturers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetManufacturers", ReplyAction="http://tempuri.org/IProductsService/GetManufacturersResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Manufacturer[]> GetManufacturersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddManufacturer", ReplyAction="http://tempuri.org/IProductsService/AddManufacturerResponse")]
        void AddManufacturer(ProductMenegmentClient.ProductService.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddManufacturer", ReplyAction="http://tempuri.org/IProductsService/AddManufacturerResponse")]
        System.Threading.Tasks.Task AddManufacturerAsync(ProductMenegmentClient.ProductService.Manufacturer manufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetOrders", ReplyAction="http://tempuri.org/IProductsService/GetOrdersResponse")]
        ProductMenegmentClient.ProductService.Order[] GetOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetOrders", ReplyAction="http://tempuri.org/IProductsService/GetOrdersResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Order[]> GetOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddOrder", ReplyAction="http://tempuri.org/IProductsService/AddOrderResponse")]
        void AddOrder(ProductMenegmentClient.ProductService.Customer c, ProductMenegmentClient.ProductService.ItemForSale[] lst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddOrder", ReplyAction="http://tempuri.org/IProductsService/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(ProductMenegmentClient.ProductService.Customer c, ProductMenegmentClient.ProductService.ItemForSale[] lst);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/CreateAcceptance", ReplyAction="http://tempuri.org/IProductsService/CreateAcceptanceResponse")]
        void CreateAcceptance(ProductMenegmentClient.ProductService.Product p, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/CreateAcceptance", ReplyAction="http://tempuri.org/IProductsService/CreateAcceptanceResponse")]
        System.Threading.Tasks.Task CreateAcceptanceAsync(ProductMenegmentClient.ProductService.Product p, int Quantity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetAcceptanceHistory", ReplyAction="http://tempuri.org/IProductsService/GetAcceptanceHistoryResponse")]
        ProductMenegmentClient.ProductService.Acceptance[] GetAcceptanceHistory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetAcceptanceHistory", ReplyAction="http://tempuri.org/IProductsService/GetAcceptanceHistoryResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Acceptance[]> GetAcceptanceHistoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IProductsService/GetDataUsingDataContractResponse")]
        ProductMenegmentClient.ProductService.CompositeType GetDataUsingDataContract(ProductMenegmentClient.ProductService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IProductsService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.CompositeType> GetDataUsingDataContractAsync(ProductMenegmentClient.ProductService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetTypes", ReplyAction="http://tempuri.org/IProductsService/GetTypesResponse")]
        ProductMenegmentClient.ProductService.ProductType[] GetTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/GetTypes", ReplyAction="http://tempuri.org/IProductsService/GetTypesResponse")]
        System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.ProductType[]> GetTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddNewType", ReplyAction="http://tempuri.org/IProductsService/AddNewTypeResponse")]
        void AddNewType(ProductMenegmentClient.ProductService.ProductType p);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductsService/AddNewType", ReplyAction="http://tempuri.org/IProductsService/AddNewTypeResponse")]
        System.Threading.Tasks.Task AddNewTypeAsync(ProductMenegmentClient.ProductService.ProductType p);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductsServiceChannel : ProductMenegmentClient.ProductService.IProductsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductsServiceClient : System.ServiceModel.ClientBase<ProductMenegmentClient.ProductService.IProductsService>, ProductMenegmentClient.ProductService.IProductsService {
        
        public ProductsServiceClient() {
        }
        
        public ProductsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ProductMenegmentClient.ProductService.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public double GetProfit() {
            return base.Channel.GetProfit();
        }
        
        public System.Threading.Tasks.Task<double> GetProfitAsync() {
            return base.Channel.GetProfitAsync();
        }
        
        public void UpdateProducts(ProductMenegmentClient.ProductService.Product p) {
            base.Channel.UpdateProducts(p);
        }
        
        public System.Threading.Tasks.Task UpdateProductsAsync(ProductMenegmentClient.ProductService.Product p) {
            return base.Channel.UpdateProductsAsync(p);
        }
        
        public void AddProducts(ProductMenegmentClient.ProductService.Product product) {
            base.Channel.AddProducts(product);
        }
        
        public System.Threading.Tasks.Task AddProductsAsync(ProductMenegmentClient.ProductService.Product product) {
            return base.Channel.AddProductsAsync(product);
        }
        
        public void AddCustomer(ProductMenegmentClient.ProductService.Customer customer) {
            base.Channel.AddCustomer(customer);
        }
        
        public System.Threading.Tasks.Task AddCustomerAsync(ProductMenegmentClient.ProductService.Customer customer) {
            return base.Channel.AddCustomerAsync(customer);
        }
        
        public void DeleteOrder(ProductMenegmentClient.ProductService.Order ord) {
            base.Channel.DeleteOrder(ord);
        }
        
        public System.Threading.Tasks.Task DeleteOrderAsync(ProductMenegmentClient.ProductService.Order ord) {
            return base.Channel.DeleteOrderAsync(ord);
        }
        
        public ProductMenegmentClient.ProductService.Sales[] GetSales() {
            return base.Channel.GetSales();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Sales[]> GetSalesAsync() {
            return base.Channel.GetSalesAsync();
        }
        
        public void MakeSales(ProductMenegmentClient.ProductService.Order o) {
            base.Channel.MakeSales(o);
        }
        
        public System.Threading.Tasks.Task MakeSalesAsync(ProductMenegmentClient.ProductService.Order o) {
            return base.Channel.MakeSalesAsync(o);
        }
        
        public ProductMenegmentClient.ProductService.Address GetAddress(ProductMenegmentClient.ProductService.Customer c) {
            return base.Channel.GetAddress(c);
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Address> GetAddressAsync(ProductMenegmentClient.ProductService.Customer c) {
            return base.Channel.GetAddressAsync(c);
        }
        
        public ProductMenegmentClient.ProductService.Customer[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Customer[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public ProductMenegmentClient.ProductService.Provider[] GetProviders() {
            return base.Channel.GetProviders();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Provider[]> GetProvidersAsync() {
            return base.Channel.GetProvidersAsync();
        }
        
        public void AddProvider(ProductMenegmentClient.ProductService.Provider provider) {
            base.Channel.AddProvider(provider);
        }
        
        public System.Threading.Tasks.Task AddProviderAsync(ProductMenegmentClient.ProductService.Provider provider) {
            return base.Channel.AddProviderAsync(provider);
        }
        
        public ProductMenegmentClient.ProductService.Manufacturer[] GetManufacturers() {
            return base.Channel.GetManufacturers();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Manufacturer[]> GetManufacturersAsync() {
            return base.Channel.GetManufacturersAsync();
        }
        
        public void AddManufacturer(ProductMenegmentClient.ProductService.Manufacturer manufacturer) {
            base.Channel.AddManufacturer(manufacturer);
        }
        
        public System.Threading.Tasks.Task AddManufacturerAsync(ProductMenegmentClient.ProductService.Manufacturer manufacturer) {
            return base.Channel.AddManufacturerAsync(manufacturer);
        }
        
        public ProductMenegmentClient.ProductService.Order[] GetOrders() {
            return base.Channel.GetOrders();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Order[]> GetOrdersAsync() {
            return base.Channel.GetOrdersAsync();
        }
        
        public void AddOrder(ProductMenegmentClient.ProductService.Customer c, ProductMenegmentClient.ProductService.ItemForSale[] lst) {
            base.Channel.AddOrder(c, lst);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(ProductMenegmentClient.ProductService.Customer c, ProductMenegmentClient.ProductService.ItemForSale[] lst) {
            return base.Channel.AddOrderAsync(c, lst);
        }
        
        public void CreateAcceptance(ProductMenegmentClient.ProductService.Product p, int Quantity) {
            base.Channel.CreateAcceptance(p, Quantity);
        }
        
        public System.Threading.Tasks.Task CreateAcceptanceAsync(ProductMenegmentClient.ProductService.Product p, int Quantity) {
            return base.Channel.CreateAcceptanceAsync(p, Quantity);
        }
        
        public ProductMenegmentClient.ProductService.Acceptance[] GetAcceptanceHistory() {
            return base.Channel.GetAcceptanceHistory();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.Acceptance[]> GetAcceptanceHistoryAsync() {
            return base.Channel.GetAcceptanceHistoryAsync();
        }
        
        public ProductMenegmentClient.ProductService.CompositeType GetDataUsingDataContract(ProductMenegmentClient.ProductService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.CompositeType> GetDataUsingDataContractAsync(ProductMenegmentClient.ProductService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public ProductMenegmentClient.ProductService.ProductType[] GetTypes() {
            return base.Channel.GetTypes();
        }
        
        public System.Threading.Tasks.Task<ProductMenegmentClient.ProductService.ProductType[]> GetTypesAsync() {
            return base.Channel.GetTypesAsync();
        }
        
        public void AddNewType(ProductMenegmentClient.ProductService.ProductType p) {
            base.Channel.AddNewType(p);
        }
        
        public System.Threading.Tasks.Task AddNewTypeAsync(ProductMenegmentClient.ProductService.ProductType p) {
            return base.Channel.AddNewTypeAsync(p);
        }
    }
}
